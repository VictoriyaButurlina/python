# Треугольник существует только тогда, когда сумма любых двух его сторон больше третьей.
# Дано a, b, c - стороны предполагаемого треугольника. Требуется сравнить длину каждого отрезка-стороны с суммой двух других.
# Если хотя бы в одном случае отрезок окажется больше суммы двух других, то треугольника с такими сторонами не существует.
# Отдельно сообщить является ли треугольник разносторонним, равнобедренным или равносторонним.

# def check_triangle(a, b, c):
#     if a + b > c and a + c > b and b + c > a:
#         if a == b == c:
#             return "Равносторонний треугольник"
#         elif a == b or a == c or b == c:
#             return "Равнобедренный треугольник"
#         else:
#             return "Разносторонний треугольник"
#     else:
#         return "Треугольник с такими сторонами не существует"
#
#
# a = float(input("Введите длину первой стороны: "))
# b = float(input("Введите длину второй стороны: "))
# c = float(input("Введите длину третьей стороны: "))
#
# result = check_triangle(a, b, c)
# print(result)

# Напишите код, который запрашивает число и сообщает является ли оно простым или составным.
# Используйте правило для проверки: “Число является простым, если делится нацело только на единицу и на себя”.
# Сделайте ограничение на ввод отрицательных чисел и чисел больше 100 тысяч.

def composite(number: int):
    if number & 1 == 0:
        return number == 2
    step = 3
    while step * step <= number and number % step != 0:
        step += 2
    return step * step > number

number: int = -1
while number < 0 or number > 100_000:
    number = int(input("Введите число от 0 до 100_000: "))
print(["Это составное число", "Это простое число"][composite(number)])